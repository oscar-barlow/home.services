# Pi-hole admin interface configuration
server {
    listen 80;
    server_name pi.hole;
    
    # Important: Don't add /admin/ to the end of the proxy_pass URL
    # This allows the Pi-hole's own redirects to work properly
    location / {
        proxy_pass http://192.168.1.204:81;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # These additional settings help with redirects
        proxy_redirect off;
        proxy_buffering off;
    }
}

# Jellyfin server configuration
server {
    listen 80;
    server_name jellyfin.home;
    
    # Simple redirect to the correct Jellyfin port
    return 301 http://jellyfin.home:8096$request_uri;
}

server {
    listen 80;
    server_name instructions.home;
    
    location / {
        return 301 https://docs.google.com/document/d/1g2MnD1MZOsabSmloHDlEKEaWNrb9_PlLD8ri6y1jFqM/;
    }
}

server {
    listen 80;
    server_name audiobookshelf.home;
    
    location / {
        proxy_pass http://audiobookshelf:13378;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Default server - catch any other requests
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    # You can customize this or redirect to a specific service
    return 404 "No service configured for this domain.";
}

# Template for adding more services
# server {
#     listen 80;
#     server_name new-service.home;
#     
#     location / {
#         proxy_pass http://container-name:port;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }
