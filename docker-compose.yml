networks:
  local_network:
    driver: bridge

services:
  nginx:
    restart: unless-stopped
    container_name: nginx
    image: nginx:latest
    ports:
      - "443:443"  # HTTPS port
      - "80:80"    # HTTP port
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - pihole
      - jellyfin
    networks:
      - local_network
  pihole:
    container_name: pihole
    image: pihole/pihole:2025.04.0
    ports:
      - "53:53/tcp"
      - "53:53/udp" 
      - "81:80/tcp"  # Expose Pi-hole web interface on port 81
    environment:
      TZ: 'Europe/London'
      FTLCONF_local_ipv4: '192.168.1.204'
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_misc_etc_dnsmasq_d: 'true'  # Required for migration from v5
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
      - './custom-dns.conf:/etc/dnsmasq.d/02-custom-dns.conf'
    cap_add:
      - NET_ADMIN  # Required for Pi-hole to function properly
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - local_network

  jellyfin:
    image: jellyfin/jellyfin:2025040803
    container_name: jellyfin
    network_mode: host
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - type: bind
        source: /media/pi/Media/Music
        target: /Music
      - type: bind
        source: /media/pi/Media/Movies
        target: /Movies
      - type: bind
        source: /media/pi/Media/Books
        target: /Books
      - type: bind
        source: /media/pi/Media/ChildrensMovies
        target: /ChildrensMovies
      - type: bind
        source: /media/pi/Media/AudioBooks
        target: /AudioBooks
    restart: 'unless-stopped'
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - 'host.docker.internal:host-gateway'
