services:
  pihole:
    container_name: pihole
    image: pihole/pihole:2023.03.1
    ports:
      - "53:53/tcp"
      - "53:53/udp" 
      - "80:80/tcp"
    environment:
      TZ: 'Europe/London'
      FTLCONF_LOCAL_IPV4: '192.168.1.204'
      DNSMASQ_LISTENING: 'all'
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    restart: unless-stopped
    logging:
      driver: syslog

  nginx:
    restart: unless-stopped
    container_name: nginx
    image: nginx:latest
    ports:
      - 81:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  plex:
    container_name: plex
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    # ports:
    #   - 32400:32400/tcp
    #   - 3005:3005/tcp
    #   - 8324:8324/tcp
    #   - 32469:32469/tcp
    #   - 1900:1900/udp
    #   - 32410:32410/udp
    #   - 32412:32412/udp
    #   - 32413:32413/udp
    #   - 32414:32414/udp
    environment:
      - TZ=Europe/London
      - PLEX_CLAIM=claim-YOURCLAIMTOKEN
    volumes:
      - ./plex/config:/config
      - ./plex/media:/media
    network_mode: host

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    network_mode: host
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - type: bind
        source: /media/pi/Media/Music
        target: /Music
        read_only: true
    restart: 'unless-stopped'
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - 'host.docker.internal:host-gateway'
