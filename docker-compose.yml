networks:
  local_network:
    driver: bridge

  homelab_macvlan:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1
          ip_range: 192.168.1.192/26

services:
  nginx:
    restart: unless-stopped
    container_name: nginx-${ENV_NAME}
    image: nginx:${NGINX_VERSION}
    ports:
      - "443:443"  # HTTPS port
      - "80:80"    # HTTP port
    volumes:
      - ./nginx/${ENV_NAME}/conf.d:/etc/nginx/conf.d
      - ./nginx/${ENV_NAME}/certs:/etc/nginx/certs
    depends_on:
      - pihole
      - jellyfin
    networks:
      - local_network
  pihole:
    container_name: pihole-${ENV_NAME}
    image: pihole/pihole:${PIHOLE_VERSION}
    environment:
      TZ: 'Europe/London'
      FTLCONF_local_ipv4: '${PIHOLE_IP}'
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_misc_etc_dnsmasq_d: 'true'  # Required for migration from v5
    volumes:
      - './pihole/${ENV_NAME}/etc-pihole:/etc/pihole'
      - './pihole/${ENV_NAME}/etc-dnsmasq.d:/etc/dnsmasq.d'
      - './dns/${ENV_NAME}/custom-dns.conf:/etc/dnsmasq.d/02-custom-dns.conf'
    cap_add:
      - NET_ADMIN  # Required for Pi-hole to function properly
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      homelab_macvlan:
        ipv4_address: ${PIHOLE_IP}

  jellyfin:
    container_name: jellyfin-${ENV_NAME}
    image: jellyfin/jellyfin:${JELLYFIN_VERSION}
    volumes:
      - ./jellyfin/${ENV_NAME}/config:/config
      - ./jellyfin/${ENV_NAME}/cache:/cache
      - ./jellyfin/${ENV_NAME}/tmp:/tmp/jellyfin
      - type: bind
        source: /media/pi/Media/Music
        target: /Music
      - type: bind
        source: /media/pi/Media/Movies
        target: /Movies
      - type: bind
        source: /media/pi/Media/Books
        target: /Books
      - type: bind
        source: /media/pi/Media/ChildrensMovies
        target: /ChildrensMovies
      - type: bind
        source: /media/pi/Media/Audiobooks
        target: /Audiobooks
    restart: 'unless-stopped'
    networks:
      homelab_macvlan:
        ipv4_address: ${JELLYFIN_IP}

  hello-world:
    container_name: hello-world-${ENV_NAME}
    image: nginx:${HELLO_WORLD_VERSION}
    restart: unless-stopped
    volumes:
      - ./hello-world/${ENV_NAME}:/usr/share/nginx/html:ro
    networks:
      homelab_macvlan:
        ipv4_address: ${HELLO_WORLD_IP}
