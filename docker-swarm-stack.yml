networks:
  homelab-shared:
    external: true

secrets:
  code_server_git_credentials:
    name: code_server_git_credentials_${ENV_NAME}
    external: true
  pihole_web_password:
    name: pihole_web_password_${ENV_NAME}
    external: true

configs:
  pihole_custom_dns:
    file: ./pihole/${ENV_NAME}/etc/dnsmasq.d/02-custom-dns.conf
  pihole_config:
    file: ./pihole/${ENV_NAME}/etc/pihole/pihole.toml
  code_server_devcontainer:
    file: ./code-server/config/devcontainer.json
  code_server_config:
    file: ./code-server/${ENV_NAME}/config.yaml

services:
  pihole:
    image: pihole/pihole:${PIHOLE_VERSION}
    environment:
      TZ: 'Europe/London'
      WEBPASSWORD_FILE: '/run/secrets/pihole_web_password'
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_misc_etc_dnsmasq_d: 'true'
      FTLCONF_dns_upstreams: '1.1.1.1;8.8.8.8'
    dns:
      - 1.1.1.1
      - 8.8.8.8
    tmpfs:
      - /etc/pihole
    configs:
      - source: pihole_custom_dns
        target: /etc/dnsmasq.d/02-custom-dns.conf
        mode: 0644
      - source: pihole_config
        target: /etc/pihole/pihole.toml
        mode: 0644
    secrets:
      - pihole_web_password
    ports:
      - "${PIHOLE_DNS_PORT}:53/tcp"
      - "${PIHOLE_DNS_PORT}:53/udp"
    cap_add:
      - NET_ADMIN
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - homelab-shared
    deploy:
      replicas: ${PIHOLE_REPLICAS}
      labels:
        - "env=${ENV_NAME}"
        - "traefik.enable=true"
        - "traefik.http.routers.pihole-${ENV_NAME}.rule=Host(`pihole.${DOMAIN_SUFFIX}`)"
        - "traefik.http.services.pihole-${ENV_NAME}.loadbalancer.server.port=80"
        - "traefik.http.middlewares.compression-pihole-${ENV_NAME}.compress=true"
        - "traefik.http.routers.pihole-${ENV_NAME}.middlewares=compression-pihole-${ENV_NAME}"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.hardware == rpi-3
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  jellyfin:
    image: jellyfin/jellyfin:${JELLYFIN_VERSION}
    ports:
      - "${JELLYFIN_HTTP_PORT}:8096"
      - "${JELLYFIN_DLNA_PORT}:1900/udp"
      - "${JELLYFIN_DISCOVERY_PORT}:7359/udp"
    volumes:
      - /var/cache/${ENV_NAME}/jellyfin:/cache
      - /srv/data/${ENV_NAME}/jellyfin/config:/config
      - /srv/data/${ENV_NAME}/jellyfin/Music:/Music
      - /srv/data/${ENV_NAME}/jellyfin/Movies:/Movies
      - /srv/data/${ENV_NAME}/jellyfin/TV:/TV
      - /srv/data/${ENV_NAME}/jellyfin/ChildrensMovies:/ChildrensMovies
      - /srv/data/${ENV_NAME}/jellyfin/ChildrensTV:/ChildrensTV
    tmpfs:
      - /tmp/jellyfin
    networks:
      - homelab-shared
    deploy:
      replicas: ${JELLYFIN_REPLICAS}
      labels:
        - "env=${ENV_NAME}"
        - "traefik.enable=true"
        - "traefik.http.routers.jellyfin-${ENV_NAME}.rule=Host(`jellyfin.${DOMAIN_SUFFIX}`)"
        - "traefik.http.services.jellyfin-${ENV_NAME}.loadbalancer.server.port=8096"
        - "traefik.http.middlewares.compression-jellyfin-${ENV_NAME}.compress=true"
        - "traefik.http.middlewares.buffering-jellyfin-${ENV_NAME}.buffering.maxRequestBodyBytes=10000000"
        - "traefik.http.middlewares.buffering-jellyfin-${ENV_NAME}.buffering.memRequestBodyBytes=2000000"
        - "traefik.http.middlewares.buffering-jellyfin-${ENV_NAME}.buffering.maxResponseBodyBytes=10000000"
        - "traefik.http.middlewares.buffering-jellyfin-${ENV_NAME}.buffering.memResponseBodyBytes=2000000"
        - "traefik.http.routers.jellyfin-${ENV_NAME}.middlewares=compression-jellyfin-${ENV_NAME},buffering-jellyfin-${ENV_NAME}"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.hardware == n100
      resources:
        limits:
          memory: 1.5G
        reservations:
          memory: 768M


  traefik:
    image: traefik:${TRAEFIK_VERSION}
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.swarm=true"
      - "--providers.swarm.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=INFO"
      - "--accesslog=true"
    ports:
      - "${TRAEFIK_HTTP_PORT}:80"
      - "${TRAEFIK_HTTPS_PORT}:443"
      - "${TRAEFIK_DASHBOARD_PORT}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - homelab-shared
    deploy:
      replicas: ${TRAEFIK_REPLICAS}
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.hardware == ${TRAEFIK_NODE_HARDWARE}
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:${AUDIOBOOKSHELF_VERSION}
    volumes:
      - /srv/data/${ENV_NAME}/audiobookshelf/Audiobooks:/audiobooks
      - /srv/data/${ENV_NAME}/audiobookshelf/config:/config
      - /srv/data/${ENV_NAME}/audiobookshelf/metadata:/metadata
    environment:
      TZ: 'Europe/London'
    networks:
      - homelab-shared
    deploy:
      replicas: ${AUDIOBOOKSHELF_REPLICAS}
      labels:
        - "env=${ENV_NAME}"
        - "traefik.enable=true"
        - "traefik.http.routers.audiobookshelf-${ENV_NAME}.rule=Host(`audiobookshelf.${DOMAIN_SUFFIX}`)"
        - "traefik.http.services.audiobookshelf-${ENV_NAME}.loadbalancer.server.port=80"
        - "traefik.http.middlewares.compression-audiobookshelf-${ENV_NAME}.compress=true"
        - "traefik.http.routers.audiobookshelf-${ENV_NAME}.middlewares=compression-audiobookshelf-${ENV_NAME}"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.hardware == n100
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  kavita:
    image: jvmilazz0/kavita:${KAVITA_VERSION}
    volumes:
      - /srv/data/${ENV_NAME}/kavita/Books:/books
      - /srv/data/${ENV_NAME}/kavita/config:/kavita/config
    environment:
      TZ: 'Europe/London'
    networks:
      - homelab-shared
    deploy:
      replicas: ${KAVITA_REPLICAS}
      labels:
        - "env=${ENV_NAME}"
        - "traefik.enable=true"
        - "traefik.http.routers.kavita-${ENV_NAME}.rule=Host(`kavita.${DOMAIN_SUFFIX}`)"
        - "traefik.http.services.kavita-${ENV_NAME}.loadbalancer.server.port=5000"
        - "traefik.http.middlewares.compression-kavita-${ENV_NAME}.compress=true"
        - "traefik.http.middlewares.buffering-kavita-${ENV_NAME}.buffering.maxRequestBodyBytes=10000000"
        - "traefik.http.middlewares.buffering-kavita-${ENV_NAME}.buffering.memRequestBodyBytes=2000000"
        - "traefik.http.middlewares.buffering-kavita-${ENV_NAME}.buffering.maxResponseBodyBytes=10000000"
        - "traefik.http.middlewares.buffering-kavita-${ENV_NAME}.buffering.memResponseBodyBytes=2000000"
        - "traefik.http.routers.kavita-${ENV_NAME}.middlewares=compression-kavita-${ENV_NAME},buffering-kavita-${ENV_NAME}"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.hardware == n100
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 384M





  code-server-init:
    image: alpine:latest
    command: ["sh", "-c", "chown -R 1000:1000 /home/coder && chown -R 1000:1000 /config"]
    volumes:
      - /srv/data/${ENV_NAME}/code-server/config:/config
      - /srv/data/${ENV_NAME}/code-server/workspace:/home/coder
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.labels.hardware == n100

  code-server:
    image: codercom/code-server:${CODE_SERVER_VERSION}
    environment:
      TZ: 'Europe/London'
      PUID: 1000
      PGID: 1000
      DEFAULT_WORKSPACE: '/home/coder'
      GIT_CONFIG_GLOBAL_CREDENTIAL_HELPER: 'store'
      GIT_AUTHOR_NAME: '${GIT_USER_NAME}'
      GIT_AUTHOR_EMAIL: '${GIT_USER_EMAIL}'
      GIT_COMMITTER_NAME: '${GIT_USER_NAME}'
      GIT_COMMITTER_EMAIL: '${GIT_USER_EMAIL}'
    volumes:
      - /srv/data/${ENV_NAME}/code-server/config:/config
      - /srv/data/${ENV_NAME}/code-server/workspace:/home/coder
    depends_on:
      - code-server-init
    configs:
      - source: code_server_devcontainer
        target: /home/coder/.devcontainer/devcontainer.json
        mode: 0644
      - source: code_server_config
        target: /home/coder/.config/code-server/config.yaml
        mode: 0644
        uid: '1000'
        gid: '1000'
    secrets:
      - source: code_server_git_credentials
        target: /home/coder/.git-credentials
        mode: 0600
        uid: '1000'
        gid: '1000'
    networks:
      - homelab-shared
    deploy:
      replicas: 1
      labels:
        - "env=${ENV_NAME}"
        - "traefik.enable=true"
        - "traefik.http.routers.code-server-${ENV_NAME}.rule=Host(`code-server.${DOMAIN_SUFFIX}`)"
        - "traefik.http.services.code-server-${ENV_NAME}.loadbalancer.server.port=8080"
        - "traefik.http.middlewares.compression-code-server-${ENV_NAME}.compress=true"
        - "traefik.http.middlewares.buffering-code-server-${ENV_NAME}.buffering.maxRequestBodyBytes=2000000"
        - "traefik.http.middlewares.buffering-code-server-${ENV_NAME}.buffering.memRequestBodyBytes=1000000"
        - "traefik.http.middlewares.buffering-code-server-${ENV_NAME}.buffering.maxResponseBodyBytes=2000000"
        - "traefik.http.middlewares.buffering-code-server-${ENV_NAME}.buffering.memResponseBodyBytes=1000000"
        - "traefik.http.routers.code-server-${ENV_NAME}.middlewares=compression-code-server-${ENV_NAME},buffering-code-server-${ENV_NAME}"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.hardware == n100
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
