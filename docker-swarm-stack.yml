networks:
  homelab-overlay:
    driver: overlay
    attachable: true

services:
  pihole:
    image: pihole/pihole:${PIHOLE_VERSION}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.${DOMAIN_SUFFIX}`)"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
    environment:
      TZ: 'Europe/London'
      WEBPASSWORD: '${PIHOLE_WEBPASSWORD}'
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_misc_etc_dnsmasq_d: 'true'
    volumes:
      - '/srv/data/${ENV_NAME}/pihole/etc/pihole:/etc/pihole'
      - '/srv/data/${ENV_NAME}/pihole/etc/dnsmasq.d:/etc/dnsmasq.d'
      - './dns/custom-dns.conf:/etc/dnsmasq.d/02-custom-dns.conf'
    cap_add:
      - NET_ADMIN
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - homelab-overlay
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.hardware == rpi-3
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  jellyfin:
    image: jellyfin/jellyfin:${JELLYFIN_VERSION}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN_SUFFIX}`)"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    ports:
      - target: 8096
        published: 8096
        protocol: tcp
        mode: host
      - target: 8920
        published: 8920
        protocol: tcp
        mode: host
      - target: 1900
        published: 1900
        protocol: udp
        mode: host
      - target: 7359
        published: 7359
        protocol: udp
        mode: host
    volumes:
      - /tmp/var/${ENV_NAME}/jellyfin/cache:/cache
      - /srv/data/${ENV_NAME}/jellyfin/config:/config
      - /srv/data/${ENV_NAME}/jellyfin/Music:/Music
      - /srv/data/${ENV_NAME}/jellyfin/Movies:/Movies
      - /srv/data/${ENV_NAME}/jellyfin/ChildrensMovies:/ChildrensMovies
    tmpfs:
      - /tmp/jellyfin
    networks:
      - homelab-overlay
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.hardware == n100
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  hello-world:
    image: nginx:${HELLO_WORLD_VERSION}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hello-world.rule=Host(`hello-world.${DOMAIN_SUFFIX}`)"
      - "traefik.http.services.hello-world.loadbalancer.server.port=80"
    volumes:
      - /srv/data/${ENV_NAME}/hello-world:/usr/share/nginx/html:ro
    networks:
      - homelab-overlay
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  traefik:
    image: traefik:${TRAEFIK_VERSION}
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmmode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - homelab-overlay
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.hardware == ${TRAEFIK_NODE_HARDWARE}
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M